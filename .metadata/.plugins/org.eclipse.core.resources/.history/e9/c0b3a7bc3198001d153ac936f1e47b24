package gameServer;

import java.util.Stack;

public class CardStack {
	Stack<Card> cards;
	
	public CardStack(int numPlayers) {
		cards = new Stack<Card>();
		for (int i = 0; i < numPlayers-1; i++) {
			cards.add(new Card(CardType.ExplodingKitten));
		}
		int numDecks = (int) Math.ceil(numPlayers/5);
		CardType[] cardTypes = new CardType[] {
				CardType.Attack, CardType.Favour, CardType.Nope,
				CardType.Shuffle, CardType.Skip, CardType.SeeTheFuture,
		};
		int[] cardAmounts = new int[] {
				2 * numDecks, 4 * numDecks, 5 * numDecks,
				4 * numDecks, 5 * numDecks, 4 * numDecks
		};
		
		for (int i = 0; i < cardTypes.length; i++) {
			for (int j = 0; j < cardAmounts[i]; j++) {
				cards.add(new Card(cardTypes[i]));	
			}
		}
		for (int i = 0; i < (6 * numDecks) - numPlayers; i++) {
			cards.add(new Card(CardType.Defuse));
		}
		
	}
	public Card drawCard(Player plr) {
		Card c = cards.pop();
		EventSystem.cardDrawn.invoke(new PlrCardPair(plr, c));
		return c;
	}

}
class PlrCardPair {
	Player player;
	Card card;
	public PlrCardPair(Player plr, Card c) {
		this.player = plr;
		this.card = c;
	}
}