package gameServer;

import java.io.IOException;
import java.net.*;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Timer;
import java.util.concurrent.*;
import java.util.function.Consumer;

public class GameServer {
	public java.util.concurrent.Executor thread;
	static GameServer game;
	
	public ArrayList<Player> players;
	public CardStack drawPile;
	public int playerGo = 0;
	public ArrayList<Card> disposePile;
	public GameServer(int port) {
		GameServer.game = this;
		disposePile = new ArrayList<Card>();
		players = new ArrayList<Player>();
		players.add(new Player(this));
		players.add(new Player(this));
		
		drawPile = new CardStack();
		
		while (Player.totalPlayers - Player.playersDead > 1) {
			Player plr = players.get(playerGo);
			plr.startTurn();
			ExplodingKittensUtils.waitTimeOrTrue(10000, plr.turnEnded, true);
			plr.drawCard();
		}
	}
	public void startServer() {

	}
	public void awaitPlayers() {
		
	}
	public static void onCardNeutralised(Object Card) {
		Card card = (Card)Card;
		card.neutralised.set();
	}
	public static void onCardDrawn(Object Card) {
		Card card = (Card)Card;
		game.disposePile.add(card);
	}
	
}
